{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "New Startup SignUp Persistent Data Stores: RDS MySQL, Custom Resource with Liquibase, SQS queue and SNS topic.",
  "Mappings": {
    "AWSRegionAmznLinuxAMI": {
      "eu-west-1": {
        "hvm": "ami-892fe1fe",
        "pvm": "ami-d02386a7"
      },
      "sa-east-1": {
        "hvm": "ami-c9e649d4",
        "pvm": "ami-e1f15bfc"
      },
      "us-east-1": {
        "hvm": "ami-76817c1e",
        "pvm": "ami-904be6f8"
      },
      "ap-northeast-1": {
        "hvm": "ami-29dc9228",
        "pvm": "ami-c9466bc8"
      },
      "us-west-2": {
        "hvm": "ami-d13845e1",
        "pvm": "ami-d38dcce3"
      },
      "us-west-1": {
        "hvm": "ami-f0d3d4b5",
        "pvm": "ami-09626b4c"
      },
      "ap-southeast-1": {
        "hvm": "ami-a6b6eaf4",
        "pvm": "ami-c2604490"
      },
      "ap-southeast-2": {
        "hvm": "ami-d9fe9be3",
        "pvm": "ami-a7c8a89d"
      }
    }
  },
  "Parameters": {
    "InstanceType": {
      "Description": "Custom resource runner instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c2.large",
        "c2.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "DbUser": {
      "Description": "The database admin account username",
      "Type": "String",
      "Default": "dbuser",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DbPassword": {
      "Description": "The database admin account password",
      "Type": "String",
      "Default": "dbpassword",
      "NoEcho": "true",
      "MinLength": "1",
      "MaxLength": "41"
    },
    "DbName": {
      "Description": "Name of database",
      "Type": "String",
      "Default": "userdb",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must be 1-64 alphanumeric characters"
    }
  },
  "Resources": {
    "FlaskSignupDatastoreRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "FlaskSignup-DatastoreAccess",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "FlaskSignupDatastoreInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "FlaskSignupDatastoreRole"
          }
        ]
      }
    },
    "LiquibaseRunnerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "LiquibaseCustomResourceRunner",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ChangeMessageVisibility",
                    "sqs:DeleteMessage",
                    "sqs:ReceiveMessage"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "LiquibaseCustomResourceQueue",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "LiquibaseRunnerInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "LiquibaseRunnerRole"
          }
        ]
      }
    },
    "LiquibaseRunnerLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "rpm": {
                "aws-cfn-resource-bridge": "http://s3.amazonaws.com/cloudformation-examples/aws-cfn-resource-bridge-0.1-4.noarch.rpm"
              },
              "yum": {
                "mysql-connector-java": [

                ]
              }
            },
            "files": {
              "/etc/cfn/bridge.d/schema.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[schema]\n",
                      "resource_type=Custom::DatabaseSchema\n",
                      "flatten=false\n",
                      "queue_url=",
                      {
                        "Ref": "LiquibaseCustomResourceQueue"
                      },
                      "\n",
                      "timeout=600\n",
                      "default_action=/home/ec2-user/liquify.py\n"
                    ]
                  ]
                }
              },
              "/home/ec2-user/liquify.py": {
                "source": "https://raw.github.com/awslabs/aws-cfn-custom-resource-examples/master/examples/schema/impl/liquify.py",
                "mode": "000755",
                "owner": "ec2-user"
              },
              "/home/ec2-user/liquibase/lib/mysql-connector-java-bin.jar": {
                "content": "/usr/share/java/mysql-connector-java.jar",
                "mode": "120644"
              },
              "/home/ec2-user/users.csv": {
                "source": "http://awsinfo.me.s3.amazonaws.com/services/cloudformation/scripts/users.csv",
                "mode": "000644",
                "owner": "ec2-user"
              },
              "/home/ec2-user/blogs.csv": {
                "source": "http://awsinfo.me.s3.amazonaws.com/services/cloudformation/scripts/blogs.csv",
                "mode": "000644",
                "owner": "ec2-user"
              }
            },
            "sources": {
              "/home/ec2-user/liquibase": "http://s3.amazonaws.com/cloudformation-examples/liquibase-3.0.5-bin.zip"
            },
            "services": {
              "sysvinit": {
                "cfn-resource-bridge": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/cfn/bridge.d/schema.conf",
                    "/home/ec2-user/liquify.py"
                  ]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "LiquibaseRunnerInstanceProfile"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionAmznLinuxAMI",
            {
              "Ref": "AWS::Region"
            },
            "hvm"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LiquibaseRunnerSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -x\n",
                "exec &> /home/ec2-user/userdata.log\n",
                "yum update -y aws-cfn-bootstrap\n",
                "/opt/aws/bin/cfn-init --region ",
                {
                  "Ref": "AWS::Region"
                },
                " -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r LiquibaseRunnerLaunchConfig -v\n",
                "/opt/aws/bin/cfn-signal -e $? '",
                {
                  "Ref": "LiquibaseRunnerWaitConditionHandle"
                },
                "'\n"
              ]
            ]
          }
        }
      }
    },
    "RdsMySqlRdbms": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBName": {
          "Ref": "DbName"
        },
        "DBSecurityGroups": [
          {
            "Ref": "RdsMySqlSecurityGroup"
          }
        ],
        "AllocatedStorage": "5",
        "DBInstanceClass": "db.m3.medium",
        "Engine": "MySQL",
        "MasterUsername": {
          "Ref": "DbUser"
        },
        "MasterUserPassword": {
          "Ref": "DbPassword"
        }
      }
    },
    "RdsMySqlSecurityGroup": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "DBSecurityGroupIngress": [
          {
            "CIDRIP": "172.31.0.0/16"
          }
        ],
        "GroupDescription": "VPC Access to RDBMS"
      }
    },
    "NewSignupQueue": {
      "Type": "AWS::SQS::Queue"
    },
    "NewSignupTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [
          {
            "Endpoint": "nobody@amazon.com",
            "Protocol": "email"
          },
          {
            "Endpoint": {
              "Fn::GetAtt": [
                "NewSignupQueue",
                "Arn"
              ]
            },
            "Protocol": "sqs"
          }
        ]
      }
    },
    "NewSignUpSns2SqsPolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "NewSignupQueue"
          }
        ],
        "PolicyDocument": {
          "Id": {
            "Fn::Join": [
              "/",
              [
                {
                  "Fn::GetAtt": [
                    "NewSignupQueue",
                    "Arn"
                  ]
                },
                "NewSignUpSns2SqsPolicy"
              ]
            ]
          },
          "Version": "2008-10-17",
          "Statement": [
            {
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "NewSignupTopic"
                  }
                }
              },
              "Resource": {
                "Fn::GetAtt": [
                  "NewSignupQueue",
                  "Arn"
                ]
              },
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "sqs:SendMessage"
              ],
              "Sid": "Allow-SNS-SendMessage",
              "Effect": "Allow"
            }
          ]
        }
      }
    },
    "LiquibaseCustomResourceQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "ReceiveMessageWaitTimeSeconds": "20",
        "VisibilityTimeout": "30"
      }
    },
    "LiquibaseCustomResourceTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [
          {
            "Endpoint": {
              "Fn::GetAtt": [
                "LiquibaseCustomResourceQueue",
                "Arn"
              ]
            },
            "Protocol": "sqs"
          }
        ]
      }
    },
    "LiquibaseCustomResourceQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "LiquibaseCustomResourceQueue"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": {
            "Fn::Join": [
              "/",
              [
                {
                  "Fn::GetAtt": [
                    "LiquibaseCustomResourceQueue",
                    "Arn"
                  ]
                },
                "LiquibaseCustomResourceQueuePolicy"
              ]
            ]
          },
          "Statement": [
            {
              "Sid": "AllowTopicToPublishMessages",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "sqs:SendMessage"
              ],
              "Resource": {
                "Fn::GetAtt": [
                  "LiquibaseCustomResourceQueue",
                  "Arn"
                ]
              },
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "LiquibaseCustomResourceTopic"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "LiquibaseRunnerAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "0",
          "MaxBatchSize": "1",
          "PauseTime": "PT0S"
        }
      },
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "LaunchConfigurationName": {
          "Ref": "LiquibaseRunnerLaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": "1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Custom Resource Runner - Liquibase",
            "PropagateAtLaunch": true
          }
        ]
      }
    },
    "LiquibaseRunnerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Access to Liquibase Custom Resource Runner instances"
      }
    },
    "LiquibaseRunnerSecurityGroupIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LiquibaseRunnerSecurityGroup",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "LiquibaseRunnerSecurityGroup",
            "GroupId"
          ]
        }
      }
    },
    "LiquibaseRunnerWaitConditionHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "LiquibaseRunnerWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "LiquibaseRunnerAutoScalingGroup",
      "Properties": {
        "Count": "1",
        "Handle": {
          "Ref": "LiquibaseRunnerWaitConditionHandle"
        },
        "Timeout": "600"
      }
    },
    "RdsMySqlSchema": {
      "Type": "Custom::DatabaseSchema",
      "DependsOn": [
        "LiquibaseRunnerAutoScalingGroup",
        "RdsMySqlRdbms",
        "LiquibaseCustomResourceQueue",
        "LiquibaseCustomResourceTopic",
        "LiquibaseCustomResourceQueuePolicy"
      ],
      "Version": "1.0",
      "Properties": {
        "ServiceToken": {
          "Ref": "LiquibaseCustomResourceTopic"
        },
        "DatabaseURL": {
          "Fn::Join": [
            "",
            [
              "jdbc:mysql://",
              {
                "Fn::GetAtt": [
                  "RdsMySqlRdbms",
                  "Endpoint.Address"
                ]
              },
              ":",
              {
                "Fn::GetAtt": [
                  "RdsMySqlRdbms",
                  "Endpoint.Port"
                ]
              },
              "/",
              {
                "Ref": "DbName"
              }
            ]
          ]
        },
        "DatabaseUsername": {
          "Ref": "DbUser"
        },
        "DatabasePassword": {
          "Ref": "DbPassword"
        },
        "databaseChangeLog": [
          {
            "changeSet": {
              "id": "0",
              "author": "dsamuel",
              "changes": [
                {
                  "modifyDataType": {
                    "tableName": "DATABASECHANGELOG",
                    "columnName": "FILENAME",
                    "newDataType": "varchar(255)"
                  }
                }
              ]
            }
          },
          {
            "changeSet": {
              "id": "1",
              "author": "dsamuel",
              "changes": [
                {
                  "createTable": {
                    "tableName": "users",
                    "columns": [
                      {
                        "column": {
                          "name": "email",
                          "type": "varchar(255)",
                          "constraints": {
                            "primaryKey": true,
                            "nullable": false
                          }
                        }
                      },
                      {
                        "column": {
                          "name": "name",
                          "type": "varchar(255)",
                          "constraints": {
                            "nullable": false
                          }
                        }
                      },
                      {
                        "column": {
                          "name": "theme",
                          "type": "varchar(30)",
                          "constraints": {
                            "nullable": false
                          }
                        }
                      },
                      {
                        "column": {
                          "name": "previewAccess",
                          "type": "varchar(10)",
                          "constraints": {
                            "nullable": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "changeSet": {
              "id": "2",
              "author": "dsamuel",
              "changes": [
                {
                  "loadData": {
                    "tableName": "users",
                    "file": "/home/ec2-user/users.csv"
                  }
                }
              ]
            }
          },
          {
            "changeSet": {
              "id": "3",
              "author": "dsamuel",
              "changes": [
                {
                  "addColumn": {
                    "tableName": "users",
                    "columns": [
                      {
                        "column": {
                          "name": "age",
                          "type": "int",
                          "defaultValueNumeric": "0"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "changeSet": {
              "id": "4",
              "author": "dsamuel",
              "changes": [
                {
                  "createTable": {
                    "tableName": "blogs",
                    "columns": [
                      {
                        "column": {
                          "name": "id",
                          "type": "int",
                          "constraints": {
                            "primaryKey": true,
                            "nullable": false
                          }
                        }
                      },
                      {
                        "column": {
                          "name": "author",
                          "type": "varchar(50)",
                          "constraints": {
                            "nullable": false
                          }
                        }
                      },
                      {
                        "column": {
                          "name": "post",
                          "type": "varchar(140)",
                          "constraints": {
                            "nullable": false
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "changeSet": {
              "id": "5",
              "author": "dsamuel",
              "changes": [
                {
                  "loadData": {
                    "tableName": "blogs",
                    "file": "/home/ec2-user/blogs.csv"
                  }
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "RdsMySqlEndpoint": {
      "Description": "Relational database endpoint for the signup data store",
      "Value": {
        "Fn::GetAtt": [
          "RdsMySqlRdbms",
          "Endpoint.Address"
        ]
      }
    },
    "SignUpSnsTopic": {
      "Description": "SNS Topic ARN",
      "Value": {
        "Ref": "NewSignupTopic"
      }
    }
  }
}
